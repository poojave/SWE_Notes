Beyond a Million Ticket Sales per Day using Redis, Ref: https://www.youtube.com/watch?v=eLDDuudD4qA
2.8 m tickets, 18 tickets sold every seconds
    Before Redis:
        1. No horizontal scaling
        2. Slow queries
        3. DB locks
        4. Purge jobs

    After Redis:
        1. Demand fill cache
        2. TTL
        3. Scalable as it's cluster of Redis
        4. Pre computed reads
        5. No DB locks

    Write back c -> service (track write request) -> db
        1. Initiate txn (100K people)
        2. Load layout
        3. Select seat
        4. Other calls
        5. Payments (4K people)

        Problems:
            1. On demand sharding is not possible
            2. Not confirmed Txn, should be purged to keep db load low (100-4 = 96K trx)
            3. Deadlocks during concurrency
            4. Revamp for less issue and downtime

            Solutions:
                1. INCR txn ID and shard key
                2. Shard key will determine which redis cluster it will go
                Advantage:
                    1. Fast txn data look up
                    2. Just TTL and no jobs
                    3. Response time from min to ms
                    4. App level sharing enables us to scale on runtime and on demand

Redis at Lyft, Ref: https://www.youtube.com/watch?v=U4WspAKekqM
    1. Company operate without SREs, believe failure would happen, 100% consistency is a myth
    2. Do load testing and intentionally fails the clusters in production, so there are less point of failure
    3. Bear no downtime even while updating configuration
    4. Uses Envoy (open source proxy tool), chaos monkey
    5. Focuses on throughput not availability
    6. Book no one to manage production env. put saviour from cascading failure of nodes
    7. have added active and passive health checks
    8. Keep less data on prod


Redis follow distributed cluster (master/slave architecture). Ref: https://www.youtube.com/watch?v=yCrSMdjV4sE

Redis scalability, Ref: https://www.youtube.com/watch?v=55TFuBMFWns -> chk RedisUsage.png

RedisDays 2019 - New York How Shopify is Scaling Up Its Redis Message Queues, Ref: https://www.youtube.com/watch?v=hu6Q6s0432A